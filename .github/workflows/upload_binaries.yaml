---
name: Upload Binaries

on:
    workflow_call:
        inputs:
            new_release_version:
                description: The new version to release
                required: true
                type: string
            new_release_published:
                description: Whether a new release was published
                required: true
                type: string
            new_release_notes:
                description: The release notes
                required: true
                type: string
            new_release_channel:
                description: The release channel
                required: true
                type: string

# Only allow one release workflow to execute at a time, since each release
# workflow uses shared resources (git tags, package registries)
concurrency:
    group: ${{ github.workflow }}

env:
    RUST_BACKTRACE: 1

jobs:
    # Compile native CLI binary
    build_application:
        name: Build CLI ${{ matrix.build.target }}
        if: inputs.new_release_published == 'true'
        runs-on: ${{ matrix.build.os }}
        env:
            CARGO: cargo

        strategy:
            matrix:
                bin:
                -   bfkview
                -   bfkrun
                build:
                    # alphabatized by target
                -   os: macOS-latest
                    target: aarch64-apple-darwin
                    cross: true
                -   os: ubuntu-latest
                    target: aarch64-unknown-linux-gnu
                    cross: true
                -   os: ubuntu-latest
                    target: aarch64-unknown-linux-musl
                    cross: true
                -   os: ubuntu-latest
                    target: i686-unknown-linux-gnu
                    cross: true
                -   os: ubuntu-latest
                    target: i686-unknown-linux-musl
                    cross: true
                -   os: macOS-latest
                    target: x86_64-apple-darwin
                    cross: false
                -   os: ubuntu-latest
                    target: x86_64-unknown-linux-gnu
                    cross: false
                -   os: ubuntu-latest
                    target: x86_64-unknown-linux-musl
                    cross: false
                -   os: ubuntu-latest
                    target: x86_64-pc-windows-gnu
                    cross: true
                -   os: ubuntu-latest
                    target: i686-pc-windows-gnu
                    cross: true

        steps:
        -   name: Checkout
            uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c   # v3.3.0

        -   name: Install tree
            if: runner.os == 'Linux'
            run: sudo apt install tree

        -   name: Install build inputs
            if: runner.os == 'Linux' && !matrix.build.cross
            run: sudo apt install musl-tools mingw-w64

        -   name: Install Rust toolchain
            uses: dtolnay/rust-toolchain@master
            id: rust-toolchain
            with:
                toolchain: stable
                target: ${{ matrix.build.target }}

        -   name: Cache dependencies
            uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f   # v2.2.1

        -   name: Install cross
            uses: taiki-e/install-action@v2
            with:
                tool: cross

        -   name: Configure cross
            if: matrix.build.cross
            run: echo "CARGO=cross" >> "$GITHUB_ENV"

        -   name: Compile release binary
            run: ${{ env.CARGO }} build --bin ${{ matrix.bin }} --release --target ${{ matrix.build.target }} --verbose

        -   name: Show generated binary
            if: runner.os == 'Linux'
            run: tree target/

        -   name: Create release archive
            run: |
                mkdir dist
                cp target/${{ matrix.build.target }}/release/${{ matrix.bin }} dist/${{ matrix.bin }}-${{ matrix.build.target }}

        -   name: Create binary checksum
            run: |
                shasum --algorithm 256 --binary ${{ matrix.bin }}-${{ matrix.build.target }} | \
                tee ${{ matrix.bin }}-${{ matrix.build.target }}-SHA256SUM.txt
            working-directory: ./dist

        -   name: Upload release artifacts
            uses: actions/upload-artifact@v3
            with:
                name: ${{ matrix.build.target }}
                path: |
                    dist/${{ matrix.bin }}-${{ matrix.build.target }}
                    dist/${{ matrix.bin }}-${{ matrix.build.target }}-SHA256SUM.txt
                if-no-files-found: error
                retention-days: 1


    upload_application:
        runs-on: ubuntu-latest
        name: Release
        if: inputs.new_release_published == 'true'
        needs:
        -   build_application

        steps:
        -   name: Checkout
            uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c   # v3.3.0
            with:
                fetch-depth: 0

        -   name: Download release artifacts
            uses: actions/download-artifact@v3
            with:
                path: artifacts

        -   name: ls artifacts
            run: ls -R ./artifacts

        -   name: Prepare GitHub Release artifacts
            run: |
                mkdir dist/
                mv artifacts/aarch64-apple-darwin dist/
                mv artifacts/aarch64-unknown-linux-gnu dist/
                mv artifacts/aarch64-unknown-linux-musl dist/
                mv artifacts/i686-unknown-linux-gnu dist/
                mv artifacts/i686-unknown-linux-musl dist/
                mv artifacts/x86_64-apple-darwin dist/
                mv artifacts/x86_64-unknown-linux-gnu dist/
                mv artifacts/x86_64-unknown-linux-musl dist/
                mv artifacts/x86_64-pc-windows-gnu dist/
                mv artifacts/i686-pc-windows-gnu dist/

        -   name: Combine checksums
            run: cat dist/**/semantic-release-cargo-*-SHA256SUM.txt | tee dist/SHA256SUMS.txt

        -   name: Upload Release Artifacts
            uses: softprops/action-gh-release@v1
            id: upload-release-asset
            env:
                GITHUB_TOKEN: ${{secrets.ACTIONS_PAT_GITHUB}}
                RELEASE_VERSION: ${{inputs.new_release_version}}
            with:
                name: brainfoamkit-${{env.RELEASE_VERSION}}
                tag_name: v${{env.RELEASE_VERSION}}
                body: ${{inputs.new_release_notes}}
                prerelease: ${{inputs.new_release_channel == 'alpha' || inputs.new_release_channel == 'beta'}}
                files: |
                    dist/**/bfkview-*
                    dist/**/bfkrun-*
                    dist/SHA256SUMS.txt
