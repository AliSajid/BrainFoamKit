# SPDX-FileCopyrightText: 2023 - 2024 Ali Sajid Imami
#
# SPDX-License-Identifier: Apache-2.0
# SPDX-License-Identifier: MIT

---
name: Book Deployment
on:
  workflow_call:
    outputs:
      deployment_url:
        description: "The vercel deployment url of the book"
        value: ${{ jobs.deploy_book.outputs.deployment_url }}

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT_GITHUB }}
  BRANCH: ${{ github.ref_name }}

jobs:
  build_book:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install mdbook
        uses: taiki-e/install-action@d4635f2de61c8b8104d59cd4aede2060638378cc # v2.49.45
        with:
          tool: mdbook
      - name: Build the Book
        run: mdbook build guide
      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: book
          path: guide/book
          retention-days: 1
          compression-level: 9
  deploy_book:
    runs-on: ubuntu-latest
    needs: [build_book]
    env:
      PROJECT_ENVIRONMENT: ''
      STORE_PATH: ''
    outputs:
      deployment_url: ${{ steps.output_deployment_url.outputs.deployment_url }}
    steps:
      - name: Decide Deployment Environment
        id: deployment_environment
        run: |
          if [[ ${{ env.BRANCH }} == "main" ]]; then
            echo "PROJECT_ENVIRONMENT=production" >> $GITHUB_ENV
          else
            echo "PROJECT_ENVIRONMENT=preview" >> $GITHUB_ENV
          fi
      - name: Download artifact
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: book
          path: /opt/book
      - name: Setup NodeJS
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '22'
      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 8
          run_install: false
      - name: Install pnpm dependencies
        run: pnpm install -g vercel@latest
      - name: Populate Vercel Variables
        run: vercel pull --cwd /opt/book --yes --environment=${{env.PROJECT_ENVIRONMENT}} --token=${{ env.VERCEL_TOKEN }}
      - name: Build for Vercel deployment -- Preview
        if: env.PROJECT_ENVIRONMENT == 'preview'
        run: vercel build --cwd /opt/book -y -d --token=${{ env.VERCEL_TOKEN }}
      - name: Deploy to Vercel -- Preview
        if: env.PROJECT_ENVIRONMENT == 'preview'
        run: vercel deploy --cwd /opt/book --prebuilt --token=${{ env.VERCEL_TOKEN }} > deployment_url
      - name: Build for Vercel deployment -- Production
        if: env.PROJECT_ENVIRONMENT == 'production'
        run: vercel build --cwd /opt/book -y --prod -d --token=${{ env.VERCEL_TOKEN }}
      - name: Deploy to Vercel -- Production
        if: env.PROJECT_ENVIRONMENT == 'production'
        run: vercel deploy --cwd /opt/book --prod --prebuilt --token=${{ env.VERCEL_TOKEN }} > deployment_url
      - name: Output Deployment URL
        id: output_deployment_url
        run: echo "deployment_url=$(cat deployment_url)" >> $GITHUB_OUTPUT
